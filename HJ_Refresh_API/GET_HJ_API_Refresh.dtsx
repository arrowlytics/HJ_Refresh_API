<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/9/2015 9:40:57 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="HP-ELABORDE1"
  DTS:CreatorName="CAPTECHVENTURES\elaborde"
  DTS:DTSID="{F402527F-092D-45A1-B081-9C439901F225}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.113"
  DTS:LocaleID="1033"
  DTS:ObjectName="GET_HJ_API_Refresh"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="421"
  DTS:VersionGUID="{F9727B29-31C8-4C5E-B3F0-E899789E43BF}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{287136FE-EB2D-4410-8443-8A8A4393FBEA}"
      DTS:ObjectName="pETLControlID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">20200715</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA47D0F7-1A16-4BB5-B22A-9C543EB6C07F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::pETLControlID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cvarETLControlID">
      <DTS:VariableValue
        DTS:DataType="3">20200715</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A050ED6E-F169-43FC-B15E-DA4E25B297E9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="cvarPkgExecID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E6CBD7F0-B1C6-43FF-8DF4-231D65FCE2F6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="rowcount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B6DFD45-67F1-4181-9D86-5131C82030B3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="totalrowcount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FA0E5B9-D2F2-453C-AC41-093067F31061}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varAPIcall">
      <DTS:VariableValue
        DTS:DataType="8">GET_HJ_API_Refresh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B05019C0-084A-45FF-A3FC-C88C1C84A675}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varAPIKey">
      <DTS:VariableValue
        DTS:DataType="8">Rnv6CJq0aI6zEuIT8L6O4LA6RP9v0VZm8kOa4rYA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B3C67A1-BEB6-46E3-9A72-4C6DD2413D86}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varClientID">
      <DTS:VariableValue
        DTS:DataType="8">PCAMG01</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3417156F-79D9-45A4-A6FF-B486B9E5923F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::varCustID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varCustID">
      <DTS:VariableValue
        DTS:DataType="3">18</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38E4B433-015E-4A05-9387-4E5BDA1BDA85}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDBXQueryPath">
      <DTS:VariableValue
        DTS:DataType="8">/api/queries/{QueryID}/results/{ResultID}.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EABDCB62-1F3E-4EAE-82FD-CC8A3FED17C3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDbxURL">
      <DTS:VariableValue
        DTS:DataType="8">https://dbx.healthjump.com/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F53CF6F3-3A8E-440E-86B2-2AD9E2487C24}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varJobStatusPath">
      <DTS:VariableValue
        DTS:DataType="8">/api/jobs/{JobID}</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93CE2814-8355-458A-BB55-428B2B42A6F8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varLoadSummaryID1">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0FB6A10-1820-4E4E-9855-285E26206E36}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varNumRowsErrored1">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB890645-B8EF-42A0-B1D3-A90020335F6D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varNumRowsIgnored1">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05FD0BEE-414A-4799-904E-220169914DEB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varNumRowsInserted1">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0CD046C-02F0-4B64-A902-AEA389DCCDF6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varParentPkgExecID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0A7A49F9-4EA9-4E17-BB50-F4A05CC4E442}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varPracticeID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A427D9C5-029F-43A0-AB02-44CA748D23E8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varQueryID">
      <DTS:VariableValue
        DTS:DataType="3">506</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{055647F8-5F1E-49BF-9DC7-3B0D8BE13B59}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varRefreshQueryPath">
      <DTS:VariableValue
        DTS:DataType="8">/api/queries/{QueryID}/refresh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6896B491-3DD6-4D5A-984E-2FC09310E86D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varTableName1">
      <DTS:VariableValue
        DTS:DataType="8">Arrow_PM.HJ_API_Refresh</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CF7D77D7-DB35-40BE-B529-DAEAACC8434F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vIsPackageExecuted">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Assign custom parameters to variables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A1AF2F7F-0091-41D5-895E-04A54E4033D4}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Assign custom parameters to variables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
          SQLTask:SqlStatementSource=";WITH params &#xA;     AS (SELECT * &#xA;         FROM   config.etl_ssis_custparams&#xA;         WHERE  custid = ? &#xA;                AND pkgname IN ( 'HealthJump_MasterControl', 'GET_HJ_API_Refresh') )&#xA;SELECT TOP 1 paramvalue                               varDbxUrl, &#xA;             (SELECT TOP 1 paramvalue &#xA;              FROM   params &#xA;              WHERE  paramkey = 'varAPIKey')                AS varAPIKey, &#xA;             (SELECT TOP 1 paramvalue &#xA;              FROM   params &#xA;              WHERE  paramkey = 'varClientID')             AS varClientID, &#xA;             (SELECT TOP 1 paramvalue &#xA;              FROM   params &#xA;              WHERE  paramkey = 'varDBXQueryPath')           AS varDBXQueryPath, &#xA;             (SELECT TOP 1 paramvalue &#xA;              FROM   params &#xA;              WHERE  paramkey = 'varJobStatusPath')              AS varJobStatusPath, &#xA;             (SELECT TOP 1 paramvalue &#xA;              FROM   params &#xA;              WHERE  paramkey = 'varQueryID') AS varQueryID, &#xA;             (SELECT TOP 1 paramvalue &#xA;              FROM   params &#xA;              WHERE  paramkey = 'varRefreshQueryPath')   AS varRefreshQueryPath&#xA;&#xA;FROM   params &#xA;WHERE  paramkey = 'varDbxUrl' "
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::varDbxURL" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="1"
            SQLTask:DtsVariableName="User::varAPIKey" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="2"
            SQLTask:DtsVariableName="User::varClientID" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="3"
            SQLTask:DtsVariableName="User::varDBXQueryPath" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="4"
            SQLTask:DtsVariableName="User::varJobStatusPath" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="5"
            SQLTask:DtsVariableName="User::varQueryID" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="6"
            SQLTask:DtsVariableName="User::varRefreshQueryPath" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::varCustID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AuditPkgExecution Update"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DelayValidation="True"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{3006B0B4-BDFD-4085-9CAE-8EC6D9C70ED2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AuditPkgExecution Update"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
          SQLTask:SqlStatementSource="UPDATE [Audit].[AuditPkgExecution]&#xA;   SET &#xA;      [ParentPkgExecID] = ?&#xA;      ,[ExecStopDT] = getdate()&#xA;      ,[SuccessfulProcessingInd] = 'Y'&#xA; WHERE PkgExecID = ?&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::varParentPkgExecID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::cvarPkgExecID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Count Load Errors"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{E168CA56-AD7B-4A4E-AC76-0460BEB938B7}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Count Load Errors"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
          SQLTask:SqlStatementSource="with loadErr as (select LoadErrorID, LoadSummaryID from Audit.LoadError where LoadSummaryID = ?)&#xA;&#xA;Select&#xA;&#x9;(select count(LoadErrorID) &#xA;&#x9;from loadErr where LoadSummaryID = ?) NumRecordsErrored1"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="NumRecordsErrored1"
            SQLTask:DtsVariableName="User::varNumRowsErrored1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::varLoadSummaryID1"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::varLoadSummaryID1"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Delete data from AthenaStg HJ API Refresh table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6F45FB89-5139-4875-9E80-CBB854CF59E6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete data from AthenaStg HJ API Refresh table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{190CF5A6-E3B8-4354-B02D-6317DDBE3BF2}"
          SQLTask:SqlStatementSource="DELETE FROM [AthenaStaging].[Arrow_PM].[HJ_API_Refresh]&#xA;  where custid = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::varCustID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get ETLControlID, PkgExecID, AccessToken from Parent package"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DelayValidation="True"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{9F6AAEAC-E211-49FD-BE63-1929F5DCCE78}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get ETLControlID, PkgExecID, AccessToken from Parent package"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5d7f1bbf3bba4d649a955cde7c5dee33"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::varTokenLifespan, User::varETLControlID, User::varPkgExecID, User::varAccessToken"
          ReadWriteVariables="User::cvarAccessToken,User::cvarETLControlID,User::cvarTokenLifespan,User::varParentPkgExecID">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f1bbf3bba4d649a955cde7c5dee33.Properties.Settings.get_Default():ST_5d7f1bbf3bba4d649a955cde7c5dee33.Properties.Sett" +
    "ings")]

namespace ST_5d7f1bbf3bba4d649a955cde7c5dee33.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5d7f1bbf3bba4d649a955cde7c5dee33
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            /*
             Variables defined in script task:
              ReadOnlyVariables: User::varETLControlID, User::varPkgExecID, User::varAccessToken, User::varTokenLifespan
              ReadWriteVariables: User::cvarETLControlID, User::varParentPkgExecID, User::varEndDate, User::cvarTokenLifespan
             
             Note that the following variables  are references to Parent package variables:
                    User::varAccessToken 
                    User::varTokenLifespan
                    User::varETLControlID
                    User::varPkgExecID
             */
            // Getting parent package variable values and assigning to local variables
            
            Dts.Variables["cvarETLControlID"].Value = Dts.Variables["User::varETLControlID"].Value;
            Dts.Variables["varParentPkgExecID"].Value = Dts.Variables["User::varPkgExecID"].Value;
            Dts.Variables["cvarAccessToken"].Value = Dts.Variables["User::varAccessToken"].Value;
            Dts.Variables["cvarTokenLifespan"].Value = Dts.Variables["User::varTokenLifespan"].Value;

            /*
            //Specific to packages with EndDate custom parameter
            string enddate = Dts.Variables["varEndDate"].Value.ToString();
            if (enddate.Equals("default"))
                enddate = DateTime.Now.ToString("MM/dd/yyyy");
            Dts.Variables["varEndDate"].Value = enddate;
            //MessageBox.Show(enddate);
             */
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f1bbf3bba4d649a955cde7c5dee33.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f1bbf3bba4d649a955cde7c5dee33.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f1bbf3bba4d649a955cde7c5dee33.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5d7f1bbf3bba4d649a955cde7c5dee33.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5d7f1bbf3bba4d649a955cde7c5dee33.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5d7f1bbf3bba4d649a955cde7c5dee33</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5d7f1bbf3bba4d649a955cde7c5dee33</msb:DisplayName>
    <msb:ProjectId>{724EE0F8-D7DE-4A70-A346-DFA66D976551}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5d7f1bbf3bba4d649a955cde7c5dee33.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5d7f1bbf3bba4d649a955cde7c5dee33")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft Corporation")]
[assembly: AssemblyProduct("ST_5d7f1bbf3bba4d649a955cde7c5dee33")]
[assembly: AssemblyCopyright("Copyright @ Microsoft Corporation 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_5d7f1bbf3bba4d649a955cde7c5dee33.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f75bd087-4dd6-48a7-b31d-266b69a890cf}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5d7f1bbf3bba4d649a955cde7c5dee33</RootNamespace>
    <AssemblyName>ST_5d7f1bbf3bba4d649a955cde7c5dee33</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_5d7f1bbf3bba4d649a955cde7c5dee33.dll">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
AAAWBI8AAADoAJQAAAA4BZkAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAADqHDhrAAAA
AAAAAQAAAAQAAAAAAAAAAAAAAEcAVQAAAAAADgAAAAAAAAAAAAAAUAAGAwAAAAAEAAAAAAAAAAAA
AABHAKcDAAAAAA4AAAAAAAAAAAAAAFAALgAAAAAAAAAAAAEAAAB3BAAABQACAAAAAAAAU1RfNWQ3
ZjFiYmYzYmJhNGQ2NDlhOTU1Y2RlN2M1ZGVlMzMAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNWQ3ZjFiYmYzYmJhNGQ2NDlhOTU1Y2RlN2M1ZGVl
MzMuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3Vs
dHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF81
ZDdmMWJiZjNiYmE0ZDY0OWE5NTVjZGU3YzVkZWUzMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNWQ3ZjFiYmYzYmJhNGQ2NDlhOTU1Y2RlN2M1ZGVlMzMu
UHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRS
ZXN1bHRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAACFj
AHYAYQByAEUAVABMAEMAbwBuAHQAcgBvAGwASQBEAAArVQBzAGUAcgA6ADoAdgBhAHIARQBUAEwA
QwBvAG4AdAByAG8AbABJAEQAACV2AGEAcgBQAGEAcgBlAG4AdABQAGsAZwBFAHgAZQBjAEkARAAA
JVUAcwBlAHIAOgA6AHYAYQByAFAAawBnAEUAeABlAGMASQBEAAAfYwB2AGEAcgBBAGMAYwBlAHMA
cwBUAG8AawBlAG4AAClVAHMAZQByADoAOgB2AGEAcgBBAGMAYwBlAHMAcwBUAG8AawBlAG4AACNj
AHYAYQByAFQAbwBrAGUAbgBMAGkAZgBlAHMAcABhAG4AAC1VAHMAZQByADoAOgB2AGEAcgBUAG8A
awBlAG4ATABpAGYAZQBzAHAAYQBuAABxUwBUAF8ANQBkADcAZgAxAGIAYgBmADMAYgBiAGEANABk
ADYANAA5AGEAOQA1ADUAYwBkAGUANwBjADUAZABlAGUAMwAzAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABFWfii/DATRapSC6Z9KK0bAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgABwEIAEBHAYAARJtEXEEIAASdQYgAgEOEnUI
t3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0F
AAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzVkN2YxYmJmM2JiYTRkNjQ5YTk1NWNkZTdjNWRl
ZTMzAAAFAQAAAAAaAQAVTWljcm9zb2Z0IENvcnBvcmF0aW9uAAArAQAmQ29weXJpZ2h0IEAgTWlj
cm9zb2Z0IENvcnBvcmF0aW9uIDIwMTUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABM
LwAAAAAAAAAAAABmLwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWC8AAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAG4EAAAAAAAAAAAAAG4ENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQA4a+ocAAABADhr6hw/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsATOAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACqAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAATAAWAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBvAGYAdAAgAEMAbwByAHAAbwByAGEAdABpAG8A
bgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA1AGQANwBm
ADEAYgBiAGYAMwBiAGIAYQA0AGQANgA0ADkAYQA5ADUANQBjAGQAZQA3AGMANQBkAGUAZQAzADMA
AAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA0ADAAMgAuADIANwA0
ADQAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA1AGQANwBmADEA
YgBiAGYAMwBiAGIAYQA0AGQANgA0ADkAYQA5ADUANQBjAGQAZQA3AGMANQBkAGUAZQAzADMALgBk
AGwAbAAAAHIAJwABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8AZgB0ACAAQwBvAHIAcABvAHIAYQB0AGkAbwBuACAAMgAw
ADEANQAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANQBkADcAZgAxAGIAYgBm
ADMAYgBiAGEANABkADYANAA5AGEAOQA1ADUAYwBkAGUANwBjADUAZABlAGUAMwAzAC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADUAZAA3AGYAMQBiAGIAZgAz
AGIAYgBhADQAZAA2ADQAOQBhADkANQA1AGMAZABlADcAYwA1AGQAZQBlADMAMwAAAEIADwABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADAAMgAuADIANwA0ADQAOAAA
AAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADAA
MgAuADIANwA0ADQAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAB4PwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\GET HJ Refresh"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{791F9CBA-BD06-4B02-A07D-09A87ADCDF6D}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:FailPackageOnFailure="True"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="GET HJ Refresh"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\GET HJ Refresh\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\GET HJ Refresh\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Inputs[Derived Column Input].Columns[EventDetail]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1000"
                      cachedName="EventDetail"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDetail]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\GET HJ Refresh\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[PracticeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[PracticeID]"
                      name="PracticeID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[ETLControlID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[ETLControlID]"
                      name="ETLControlID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::cvarETLControlID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::cvarETLControlID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[LoadSummaryID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[LoadSummaryID]"
                      name="LoadSummaryID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::varLoadSummaryID1]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::varLoadSummaryID1]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[CustID]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[CustID]"
                      name="CustID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::varCustID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::varCustID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[InsertDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[InsertDate]"
                      name="InsertDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[dc_EventDetail]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="100"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[dc_EventDetail]"
                      name="dc_EventDetail"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,100,1252)[LEFT](#{Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDetail]},100)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,100,1252)LEFT(EventDetail,100)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\GET HJ Refresh\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GET HJ Refresh\Get HJ Refresh API"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Get HJ Refresh API"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[Arrow_PM].[HJ_API_Refresh]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GET HJ Refresh\Get HJ Refresh API.Connections[OleDbConnection]"
                  connectionManagerID="{190CF5A6-E3B8-4354-B02D-6317DDBE3BF2}:external"
                  connectionManagerRefId="Project.ConnectionManagers[AthenaStaging]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[Customer]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="Customer"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[Customer]"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[Customer]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[JsEMRSettingID]"
                      cachedDataType="i4"
                      cachedName="JsEMRSettingID"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[JsEMRSettingID]"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[JsEMRSettingID]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[ID]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[LogDateTime]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="LogDateTime"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[LogDateTime]"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[LogDateTime]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[ClientID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedName="ClientID"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[ClientID]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[AccessID]"
                      cachedDataType="i4"
                      cachedName="AccessID"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[AccessID]"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[AccessID]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[EventDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="EventDate"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[EventDate]"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDate]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[EventDesc]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="EventDesc"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[EventDesc]"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDesc]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[InsertDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="InsertDate"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[InsertDate]"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[InsertDate]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[CustID]"
                      cachedDataType="i4"
                      cachedName="CustID"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[CustID]"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[CustID]" />
                    <inputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].Columns[dc_EventDetail]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="dc_EventDetail"
                      externalMetadataColumnId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[EventDetail]"
                      lineageId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output].Columns[dc_EventDetail]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[InsertDate]"
                      dataType="dbTimeStamp"
                      name="InsertDate" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[Customer]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      name="Customer" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[JsEMRSettingID]"
                      dataType="i4"
                      name="JsEMRSettingID" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[EventDetail]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="EventDetail" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[LogDateTime]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="LogDateTime" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      name="ClientID" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[AccessID]"
                      dataType="i4"
                      name="AccessID" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[EventDate]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="EventDate" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[EventDesc]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="EventDesc" />
                    <externalMetadataColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input].ExternalColumns[CustID]"
                      dataType="i4"
                      name="CustID" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GET HJ Refresh\Get HJ Refresh API.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GET HJ Refresh\Get HJ Refresh API.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\Get HJ Refresh API.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GET HJ Refresh\Get HJ Refresh API.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GET HJ Refresh\GET HJ Refresh API Call"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="GET HJ Refresh API Call"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Linq;
using System.Web;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Pipeline;
using RestSharp;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[SSISScriptComponentEntryPoint]
public class ScriptMain : UserComponent {
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    #region Private variables
    private string dbxUrl = "";
    private IRestClient _client;
    private string ClientID = "";
    private int QueryID = 0;
    private string APIKey = "";
    private string RefreshQueryPath = "";
    private string JobStatusPath = "";
    private string DBXQueryPath = "";

    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute() {
        //Declare TLS 1.2 Usage
        System.Net.ServicePointManager.SecurityProtocol = (System.Net.SecurityProtocolType)3072;

        base.PreExecute();
        this.SetLocalVariables();
    }

    public override void CreateNewOutputRows() {

        dbxQueryObject apiCallResult = GetDbxQuery();

        // Pull data from API result
        try
        {
            foreach (Row row in apiCallResult.query_result.data.rows)
            {
                Output0Buffer.AddRow();
                Output0Buffer.Customer = row.Customer;
                Output0Buffer.JsEMRSettingID = row.JsEMRSettingID;
                Output0Buffer.ID = row.ID;
                Output0Buffer.EventDetail = row.EventDetail;
                Output0Buffer.LogDateTime = row.LogDateTime;
                Output0Buffer.ClientID = row.ClientID;
                Output0Buffer.AccessID = row.AccessID;
                Output0Buffer.EventDate = row.EventDate;
                Output0Buffer.EventDesc = row.EventDesc;
            }
        }
        catch (Exception e)
        {
            failComponent(e.Message);
        }
    }

    #region Pre-Execute Tasks
    private void SetLocalVariables()
    {

        this.dbxUrl = this.Variables.varDbxURL;
        this.ClientID = this.Variables.varClientID;
        this.QueryID = this.Variables.varQueryID; 
        this.APIKey = this.Variables.varAPIKey; 
        this.RefreshQueryPath = this.Variables.varRefreshQueryPath;
        this.JobStatusPath = this.Variables.varJobStatusPath;
        this.DBXQueryPath = this.Variables.varDBXQueryPath;

    }

#endregion

#region Authentication/Authorization  

// api execute statement for each call to the api; returns JSON based upon class type passed to method (see region Inner Classes below)
public T Execute<T>(RestRequest request) where T : new()
    {
        // headers used on every request
        request.AddHeader("Authorization", "Key " + this.APIKey);

        // execute api call
        var response = _client.Execute<T>(request);

        if (response.ErrorException != null)
        {
            const string message = "Error retrieving response.  Check inner details for more info.";
            var APIException = new Exception(message, response.ErrorException);
            throw APIException;
        }
        // return JSON
        return response.Data;
    }

    #endregion

    #region String Helpers
    /// <summary>
    ///   Convert parameters into a URL query string.
    /// </summary>
    /// <param name="parameters">The parameters to encode</param>
    /// <returns>The URL query string</returns>
    static public string UrlEncode(Dictionary<string, string> parameters) {
        // Encode each key and value, join with "=", then join pairs with "&"
        return string.Join("&", parameters.Select(
          kvp => HttpUtility.UrlEncode(kvp.Key) + "=" + HttpUtility.UrlEncode(kvp.Value)
        ).ToList());
    }

    /// <summary>
    ///   Join arguments into a valid URL.
    /// </summary>
    /// <param name="args">Any number of strings to join</param>
    /// <returns>The resulting URL</returns>
    static private string PathJoin(params string[] args) {
        // Trim slashes, filter out empties, join by slashes
        return string.Join("/", args
                           .Select(arg => arg.Trim(new char[] { '/' }))
                           .Where(arg => !String.IsNullOrEmpty(arg))
        );
    }
    #endregion

    #region GET Calls

    // get fresh query result based on RefreshQueryObject JSON class (in region Inner Classes)
    public RefreshQueryObject GetFreshQueryResult(int QueryId)
    {
        // path to query refresh
        var request = new RestRequest(this.RefreshQueryPath, Method.POST);
        // replace QueryID from path above
        request.AddUrlSegment("QueryID", QueryId);
        // pass Client ID parameter to query
        //request.AddParameter("p_client_id", this.ClientID, ParameterType.QueryString);

        // pass Client ID parameter to query
        request.AddParameter("p_Client_ID", this.ClientID, ParameterType.QueryString);

        return Execute<RefreshQueryObject>(request);

    }

    // get api job status based on RefreshQueryObject JSON class (in region Inner Classes)
    public RefreshQueryObject PollApiJob (RefreshQueryObject ApiJobResult)
    {
        // path to poll api job
        var request = new RestRequest(this.JobStatusPath);
        // replace JobID from path above
        request.AddUrlSegment("JobID", ApiJobResult.job.id);

        // initialize status value
        ApiJobResult.job.status = 0;

        // while job status is not complete or error
        while (ApiJobResult.job.status < 3)
        {
            // check on job status
            ApiJobResult = Execute<RefreshQueryObject>(request);

            // sleep for 2 seconds
            System.Threading.Thread.Sleep(2);

            // reinitialize request for subsequent execution
            request = new RestRequest(this.JobStatusPath);
            //replace JobID from above path
            request.AddUrlSegment("JobID", ApiJobResult.job.id);
        }

        return ApiJobResult;

    }

    // get DBX query data based on dbxQueryObject JSON class (in region Inner Classes)
    public dbxQueryObject GetDbxQuery()
    {
        // Call job to refresh query data
        this._client = new RestClient(this.dbxUrl);
        RefreshQueryObject QueryRefreshResult = GetFreshQueryResult(this.QueryID);

        // Poll status of query refresh job
        RefreshQueryObject ApiJobResult = PollApiJob(QueryRefreshResult);

        // Get data query results
        var request = new RestRequest(this.DBXQueryPath);

        request.AddUrlSegment("QueryID", this.QueryID);
        request.AddUrlSegment("ResultID", ApiJobResult.job.query_result_id);

        return Execute<dbxQueryObject>(request);
    }

    #endregion

    #region Error Handling
    private void failComponent(string errorMsg) {
        bool fail = false;
        this.ComponentMetaData.FireError(1,"ERROR", errorMsg, "", 0, out fail);    }
    #endregion

    #region Inner Classes
    // objects related to dbxQueryObject JSON
    public class Row
    {
        public string Customer { get; set; }
        public Int32 JsEMRSettingID { get; set; }
        public Int32 ID { get; set; }
        public string EventDetail { get; set; }
        public string LogDateTime { get; set; }
        public string ClientID { get; set; }
        public Int32 AccessID { get; set; }
        public string EventDate { get; set; }
        public string EventDesc { get; set; }
    }

    public class Column
    {
        public string friendly_name { get; set; }
        public string type { get; set; }
        public string name { get; set; }
    }

    public class Data
    {
        public List<Row> rows { get; set; }
        public List<Column> columns { get; set; }
    }

    public class QueryResult
    {
        public DateTime retrieved_at { get; set; }
        public string query_hash { get; set; }
        public string query { get; set; }
        public double runtime { get; set; }
        public Data data { get; set; }
        public int id { get; set; }
        public int data_source_id { get; set; }
    }

    public class dbxQueryObject
    {
        public QueryResult query_result { get; set; }
    }

    // objects related to RefreshQueryObject JSON
    public class JobResult
    {
        public int status { get; set; }
        public string error { get; set; }
        public string id { get; set; }
        public string query_result_id { get; set; }
        public string updated_at { get; set; }
    }
    public class RefreshQueryObject
    {
        public JobResult job { get; set; }
    }
    #endregion
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="12.0.2" targetFramework="net45" />
</packages>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varAPIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varAPIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varClientID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varDBXQueryPath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varDBXQueryPath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varDbxURL
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varDbxURL"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varJobStatusPath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varJobStatusPath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 varQueryID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["varQueryID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varRefreshQueryPath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varRefreshQueryPath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_683ef66c95fd443f9c30b0f07903a515.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7417DD5D-2743-4038-8553-490032F95E7A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_683ef66c95fd443f9c30b0f07903a515</RootNamespace>
    <AssemblyName>SC_88B3F2D8A4474F6AAFAB569FCF7D8057</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\wbradley\AppData\Local\Temp\Vsta\SSIS_SC140\VstaWBt2B8iCskyMbIwvD__hHLA\packages\Newtonsoft.Json.12.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="RestSharp, Version=106.6.10.0, Culture=neutral, PublicKeyToken=598062e77f915f75, processorArchitecture=MSIL">
      <HintPath>C:\Users\wbradley\AppData\Local\Temp\Vsta\SSIS_SC140\VstaB8pcCP0_lkuGtOPEEydo9A\packages\RestSharp.106.6.10\lib\net452\RestSharp.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_683ef66c95fd443f9c30b0f07903a515.Properties.Settings.get_Default():SC_683ef66c95fd443f9c30b0f07903a515.Properties.Sett" +
    "ings")]

namespace SC_683ef66c95fd443f9c30b0f07903a515.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Customer
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Customer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 JsEMRSettingID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool JsEMRSettingID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EventDetail
    {
        set
        {
            this[3] = value;
        }
    }
    public bool EventDetail_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LogDateTime
    {
        set
        {
            this[4] = value;
        }
    }
    public bool LogDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClientID
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ClientID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 AccessID
    {
        set
        {
            this[6] = value;
        }
    }
    public bool AccessID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EventDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool EventDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EventDesc
    {
        set
        {
            this[8] = value;
        }
    }
    public bool EventDesc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_683ef66c95fd443f9c30b0f07903a515</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_683ef66c95fd443f9c30b0f07903a515</msb:DisplayName>
    <msb:ProjectId>{5312076C-65A2-493A-A4E6-6A016AFBEB9D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_683ef66c95fd443f9c30b0f07903a515.csproj" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_683ef66c95fd443f9c30b0f07903a515")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_683ef66c95fd443f9c30b0f07903a515")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_683ef66c95fd443f9c30b0f07903a515.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_683ef66c95fd443f9c30b0f07903a515.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_683ef66c95fd443f9c30b0f07903a515.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_683ef66c95fd443f9c30b0f07903a515.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_683ef66c95fd443f9c30b0f07903a515.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_88B3F2D8A4474F6AAFAB569FCF7D8057.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
A30YAAAEKh4CexkAAAQqIgIDfRkAAAQqHgJ7GgAABCoiAgN9GgAABCoeAnsbAAAEKiICA30bAAAE
Kh4CexwAAAQqIgIDfRwAAAQqHgJ7HQAABCoiAgN9HQAABCoeAnseAAAEKiICA30eAAAEKh4Cex8A
AAQqIgIDfR8AAAQqHgJ7IAAABCoiAgN9IAAABCoeAnshAAAEKiICA30hAAAEKh4CeyIAAAQqIgID
fSIAAAQqHgJ7IwAABCoiAgN9IwAABCoeAnskAAAEKiICA30kAAAEKh4CeyUAAAQqIgIDfSUAAAQq
HgJ7JgAABCoiAgN9JgAABCoeAnsnAAAEKiICA30nAAAEKh4CeygAAAQqIgIDfSgAAAQqHgJ7KQAA
BCoiAgN9KQAABCoeAnsqAAAEKiICA30qAAAEKh4CeysAAAQqIgIDfSsAAAQqHgJ7LAAABCoiAgN9
LAAABCouc3cAAAaALQAABCqODwEoQQAACihCAAAKcuICAHAPAShDAAAKKEIAAAooRAAACipKAxeN
PAAAASUWHy+db0UAAAoqKgMoRgAAChb+ASoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAADAFAAAI34AACwVAABkEQAAI1N0cmluZ3MAAAAAkCYAAOgCAAAjVVMAeCkAABAAAAAj
R1VJRAAAAIgpAABEBAAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJDwAAAPoBMwAWAAABAAAAPAAAABAA
AAAwAAAAegAAAEEAAABGAAAAZgAAAAYAAAALAAAAOAAAAFUAAAAHAAAAAQAAAAkAAAABAAAACAAA
AAEAAAAHAAAAAAAJCgEAAAAAAAYAVAh5DQYA/Ah5DQYAoAdmDQ8A7Q0AAAYAzQeACwYANwiACwYA
GAiACwYA4wiACwYAdAiACwYAjQiACwYA5AeACwYA/wdGCQoAqAh5Bg4A4A8wDAYAxgAuAj8ARA0A
AAYAtQsjCw4AaBAwDA4AtgAwDAYA6QAuAgYAzwgjCwYAaQ8jCwYAaAd5DQYAWAYjCwYA0wAjCwYA
2gAuAgoAdgx5BhIAZwx5BgoAywt5BgoALhB5BgYAgwdmDQYAhwyZDQYAvwtrCxYAUwfTCRYAtAfT
CRYACQdWCxYAlwx3DxYAmgZ3DwYA2wUjCwYAYAkjCw4AZxAwDA4AIQcwDBoA0AU+DAYAqAAuAg4A
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
LikAAAAAhgh0CVIAMgA2KQAAAACGCIMJEAAyAD8pAAAAAIYIMxFSADMARykAAAAAhgg9ERAAMwBQ
KQAAAACGCGEG+AI0AFgpAAAAAIYIbQb8AjQAYSkAAAAAhgjpAQEDNQBpKQAAAACGCPIBBgM1AHIp
AAAAAIYIrgKnAjYAeikAAAAAhgi1AgEANgCDKQAAAACGCIgCpwI3AIspAAAAAIYImwIBADcA0ScA
AAAAhhhPDQYAOACUKQAAAACGCL4PDAM4AJwpAAAAAIYIzw8RAzgA0ScAAAAAhhhPDQYAOQClKQAA
AACGCMsOpwI5AK0pAAAAAIYI1g4BADkAtikAAAAAhggtDVIAOgC+KQAAAACGCDcNEAA6AMcpAAAA
AIYIrgJSADsAzykAAAAAhgi1AhAAOwDYKQAAAACGCLwCUgA8AOApAAAAAIYI0AIQADwA6SkAAAAA
hggHD1IAPQDxKQAAAACGCBYPEAA9ANEnAAAAAIYYTw0GAD4A+ikAAAAAhggaAhcDPgACKgAAAACG
CCICHAM+ANEnAAAAAIYYTw0GAD8ACyoAAAAAkRhVDcMCPwDRJwAAAACGGE8NBgA/ABcqAAAAAIMA
XQAiAz8AOyoAAAAAgwB6ACwDQABOKgAAAACDAJYAMQNBAAAAAQB0EAAAAQCyDgAAAQCBDgAAAQBl
AgAAAQCdDwAAAQBrCQAAAQB8DAAAAgBTDgAAAwDZCwAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAA
AQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAv
CQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQDDDgAAAgBcDQAAAwCqDgAABADZCwAAAQA0EAAA
AQA0EAAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAv
CQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAA
AQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAvCQAAAQAv
CQAAAQAvCQAAAQA6DAAAAQBnCQAAAQBnCQkATw0BABEATw0GABkATw0KACkATw0QADEATw0QADkA
Tw0QAEEATw0QAEkATw0QAFEATw0QAFkATw0QAGEATw0QAGkATw0GAKkATw0GALkATw0GAPkATw0G
ABkBTw0VACkB9QocAPEAGgkGAAwAQQ05ABQAPhBJABQAsBBOADkBLwcGAIkAxAVSAEEBRw9fAJEA
TwxlAHEAHQltAFEBrAt/AIkATw2EABwAygFJACQATw2eAFkBcA+kAFkBfBDIAEEBSgvdACwATw2e
ADQATw2eAFkBzwb7AJEATw0ZAZEA9A8hAZEAFg0pAZEATw0QAJEA9A9lAIEBKgw5AYkBTw0QAPEA
0wFQAZEBIw1WAdkATw1hAdkAGgtrAdkA7QoBAJkBTw0QANkA/RAGANkAgg8GANkAhQ9OAPEATw0G
APEAnwF1AfEAZw58AbEATw0GAPEAPQ6CAaEBEQuIAfEA6BCPAakBuRCVAcEB+QWcAcEBGhGlAQEB
Tw2rASEBTw0GADwAEhFJANkBugW6ATwAJQm/AUEBRw/EAUEBKgvLAUEBUxHRAS4ACwB9Ay4AEwCG
Ay4AGwClAy4AIwCuAy4AKwDXAy4AMwDXAy4AOwDXAy4AQwCuAy4ASwDdAy4AUwDXAy4AWwD0A0MA
YwA+BGQAawA+BOMAewA+BAECcwA+BAMCcwA+BCECcwA+BEECcwA+BGECcwA+BIECcwA+BKECcwA+
BMECcwA+BOECcwA+BAEDcwA+BCEDcwA+BEEDcwA+BEkDgwClA2EDcwA+BGkDgwClA4EDcwA+BKED
cwA+BMEDcwA+BOEDcwA+BAEEcwA+BCEEcwA+BEEEcwA+BGEEcwA+BIEEcwA+BKEEcwA+BMEEcwA+
BOEEcwA+BAEFcwA+BCEFcwA+BEEFcwA+BGEFcwA+BIEFcwA+BOAGcwA+BAAHcwA+BCAHcwA+BEAH
cwA+BGAHcwA+BIAHcwA+BKAHcwA+BMAHcwA+BOAHcwA+BAAIcwA+BCAIcwA+BEAIcwA+BGAIcwA+
BIAIcwA+BKAIcwA+BMAIcwA+BOAIcwA+BAAJcwA+BEAJcwA+BGAJcwA+BIAJcwA+BKAJcwA+BMAJ
cwA+BOAJcwA+BCAKcwA+BEAKcwA+BGAKcwA+BIAKcwA+BMAKcwA+BOAKcwA+BAALcwA+BCALcwA+
BEALcwA+BGALcwA+BIALcwA+BKALcwA+BMALcwA+BOALcwA+BAAMcwA+BCAMcwA+BEAMcwA+BGAM
cwA+BKAMcwA+BMAMcwA+BAANcwA+BCANcwA+BEANcwA+BGANcwA+BIANcwA+BKANcwA+BMANcwA+
BOANcwA+BAAOcwA+BCAOcwA+BGAOcwA+BIAOcwA+BCMAVgAUAT4BTAFxAQMAAQAGABMABwAaAAgA
HAAJAB0ACgAmAAsAKQAMACsADQAyAA4AMwAPADgAAAC8DDYDAADdCjoDAABMAT4DAABDCjoDAAC3
AT4DAAB3CjoDAAD9CTYDAADGCjoDAABVBjYDAACaCjoDAACWATYDAABxCjoDAABsAT4DAABdCjoD
AABJBzYDAACxCjoDAABbAjYDAACFCjoDAAAIETYDAACTATYDAACrCTYDAAC+ATYDAACWCTYDAACv
AT4DAAC/CTYDAACHDEIDAAABB0gDAACVD04DAAC8DDYDAABMAT4DAAC3AT4DAAD9CTYDAABVBjYD
AACWATYDAABsAT4DAABJBzYDAABbAjYDAAAzBjYDAADKBjYDAAA8BjYDAAACD1MDAACWDlwDAAA6
D2UDAACHCTYDAABBETYDAABxBmoDAAD2AW4DAADhAj4DAACfAj4DAADTD3MDAADaDj4DAAA7DTYD
AADhAjYDAADUAjYDAAAaDzYDAAAmAngDAQANAAMAAQAOAAUAAQAPAAcAAQAQAAkAAQARAAsAAQAS
AA0AAQATAA8AAQAUABEAAQAVABMAAQAWABUAAQAXABcAAQAYABkAAQAZABsAAQAaAB0AAQAbAB8A
AQAcACEAAQAdACMAAQAeACUAAgApACcAAgAqACkAAgArACsAAgAsAC0AAgAtAC8AAgAuADEAAgAv
ADMAAgAxADUAAgAyADcAAQAzADcAAgA0ADkAAgA3ADsAAQA4ADsAAgA5AD0AAQA6AD0AAgA7AD8A
AQA8AD8AAgA9AEEAAQA+AEEAAgA/AEMAAQBAAEMAAgBBAEUAAQBCAEUAAgBDAEcAAQBEAEcAAgBF
AEkAAQBGAEkAAgBHAEsAAQBIAEsAAgBKAE0AAQBLAE0AAgBMAE8AAQBNAE8AAgBOAFEAAQBPAFEA
AgBRAFMAAQBSAFMAAgBTAFUAAQBUAFUAAgBWAFcAAQBXAFcAAgBYAFkAAQBZAFkAAgBaAFsAAQBb
AFsAAgBcAF0AAQBdAF0AAgBeAF8AAQBfAF8AAgBgAGEAAQBhAGEAAgBiAGMAAQBjAGMAAgBlAGUA
AQBmAGUAAgBoAGcAAQBpAGcAAgBqAGkAAQBrAGkAAgBsAGsAAQBtAGsAAgBuAG0AAQBvAG0AAgBw
AG8AAQBxAG8AAgBzAHEAAQB0AHEAMgBCAIsAkgDoAPQAswEEgAAAAQAAAAAAAAAAAAAAAAD2AAAA
BAAAAAAAAAAAAAAA1gEGAgAAAAAOAAAAAAAAAAAAAADfAUoQAAAAAGoABgAKAAAAAAAAAOgBMAwA
AAAADgAAAAAAAAAAAAAA3wGDEAAAAAAEAAAAAAAAAAAAAADWASMLAAAAAAQAAAAAAAAAAAAAANYB
1QYAAAAADgAAAAAAAAAAAAAA3wEGDAAAAAAOAAAAAAAAAAAAAADfAeMLAAAAAAQAAAAAAAAAAAAA
APEB+wEAAAAAAAAAAAEAAACqDQAACQACAAoAAgALAAIADAACAA0AAgAOAAIADwACABAAAgAAABAA
CQDIATUAegA/AL4AQQDZAD8A7wBJANkACAA0AQgARwEAAABJRFRTQ29tcG9uZW50TWV0YURhdGEx
MDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQx
MDAAPD45X18xMl8wADxVcmxFbmNvZGU+Yl9fMTJfMAA8PjlfXzEzXzAAPFBhdGhKb2luPmJfXzEz
XzAAPD45X18xM18xADxQYXRoSm9pbj5iX18xM18xAElFbnVtZXJhYmxlYDEASVJlc3RSZXNwb25z
ZWAxAExpc3RgMQBJbnQzMgBGdW5jYDIAS2V5VmFsdWVQYWlyYDIARGljdGlvbmFyeWAyAFNDXzg4
QjNGMkQ4QTQ0NzRGNkFBRkFCNTY5RkNGN0Q4MDU3ADw+OQA8TW9kdWxlPgBnZXRfSUQAc2V0X0lE
AGdldF9Kc0VNUlNldHRpbmdJRABzZXRfSnNFTVJTZXR0aW5nSUQAZ2V0X0FjY2Vzc0lEAHNldF9B
Y2Nlc3NJRABnZXRfQ2xpZW50SUQAc2V0X0NsaWVudElEAGdldF92YXJDbGllbnRJRABHZXRPdXRw
dXRJRABnZXRfdmFyUXVlcnlJRABnZXRfdmFyRGJ4VVJMAFQAZ2V0X0RhdGEAZ2V0X0NvbXBvbmVu
dE1ldGFEYXRhAGdldF9kYXRhAHNldF9kYXRhAFN5c3RlbS5XZWIAbXNjb3JsaWIAUG9sbEFwaUpv
YgBnZXRfam9iAHNldF9qb2IAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAGdldF9FdmVu
dERlc2MAc2V0X0V2ZW50RGVzYwBRdWVyeUlkAFRocmVhZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGdl
dF9kYXRhX3NvdXJjZV9pZABzZXRfZGF0YV9zb3VyY2VfaWQAZ2V0X2lkAHNldF9pZABnZXRfcXVl
cnlfcmVzdWx0X2lkAHNldF9xdWVyeV9yZXN1bHRfaWQAPElEPmtfX0JhY2tpbmdGaWVsZAA8SnNF
TVJTZXR0aW5nSUQ+a19fQmFja2luZ0ZpZWxkADxBY2Nlc3NJRD5rX19CYWNraW5nRmllbGQAPENs
aWVudElEPmtfX0JhY2tpbmdGaWVsZAA8ZGF0YT5rX19CYWNraW5nRmllbGQAPGpvYj5rX19CYWNr
aW5nRmllbGQAPEV2ZW50RGVzYz5rX19CYWNraW5nRmllbGQAPGlkPmtfX0JhY2tpbmdGaWVsZAA8
ZGF0YV9zb3VyY2VfaWQ+a19fQmFja2luZ0ZpZWxkADxxdWVyeV9yZXN1bHRfaWQ+a19fQmFja2lu
Z0ZpZWxkADxuYW1lPmtfX0JhY2tpbmdGaWVsZAA8ZnJpZW5kbHlfbmFtZT5rX19CYWNraW5nRmll
bGQAPExvZ0RhdGVUaW1lPmtfX0JhY2tpbmdGaWVsZAA8cnVudGltZT5rX19CYWNraW5nRmllbGQA
PHR5cGU+a19fQmFja2luZ0ZpZWxkADxFdmVudERhdGU+a19fQmFja2luZ0ZpZWxkADxxdWVyeV9o
YXNoPmtfX0JhY2tpbmdGaWVsZAA8RXZlbnREZXRhaWw+a19fQmFja2luZ0ZpZWxkADxDdXN0b21l
cj5rX19CYWNraW5nRmllbGQAPGVycm9yPmtfX0JhY2tpbmdGaWVsZAA8Y29sdW1ucz5rX19CYWNr
aW5nRmllbGQAPHN0YXR1cz5rX19CYWNraW5nRmllbGQAPHJvd3M+a19fQmFja2luZ0ZpZWxkADx1
cGRhdGVkX2F0PmtfX0JhY2tpbmdGaWVsZAA8cmV0cmlldmVkX2F0PmtfX0JhY2tpbmdGaWVsZAA8
cXVlcnlfcmVzdWx0PmtfX0JhY2tpbmdGaWVsZAA8cXVlcnk+a19fQmFja2luZ0ZpZWxkAE1ldGhv
ZABkZWZhdWx0SW5zdGFuY2UAVXJsRW5jb2RlAGdldF9NZXNzYWdlAEVudW1lcmFibGUASURpc3Bv
c2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X25hbWUAc2V0X25h
bWUAZ2V0X2ZyaWVuZGx5X25hbWUAc2V0X2ZyaWVuZGx5X25hbWUAZ2V0X0xvZ0RhdGVUaW1lAHNl
dF9Mb2dEYXRlVGltZQBnZXRfcnVudGltZQBzZXRfcnVudGltZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZQBTZWN1cml0eVByb3RvY29sVHlwZQBQYXJhbWV0ZXJUeXBlAGdldF90eXBl
AHNldF90eXBlAFdoZXJlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBJUmVzdFJlc3BvbnNlAERpc3Bvc2UA
Z2V0X0V2ZW50RGF0ZQBzZXRfRXZlbnREYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRB
dHRyaWJ1dGUAUGFyYW1BcnJheUF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBnZXRfVmFsdWUAdmFsdWUAU3lz
dGVtLlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBhcmcAZXJyb3JN
c2cAZ2V0X3F1ZXJ5X2hhc2gAc2V0X3F1ZXJ5X2hhc2gAZ2V0X3ZhckpvYlN0YXR1c1BhdGgAZ2V0
X3ZhckRCWFF1ZXJ5UGF0aABnZXRfdmFyUmVmcmVzaFF1ZXJ5UGF0aABTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAZ2V0X0V2ZW50RGV0YWlsAHNldF9FdmVudERldGFpbABTQ184OEIzRjJEOEE0NDc0RjZB
QUZBQjU2OUZDRjdEODA1Ny5kbGwAc2V0X0lEX0lzTnVsbABzZXRfSnNFTVJTZXR0aW5nSURfSXNO
dWxsAHNldF9BY2Nlc3NJRF9Jc051bGwAc2V0X0NsaWVudElEX0lzTnVsbABzZXRfRXZlbnREZXNj
X0lzTnVsbABzZXRfTG9nRGF0ZVRpbWVfSXNOdWxsAHNldF9FdmVudERhdGVfSXNOdWxsAHNldF9F
dmVudERldGFpbF9Jc051bGwAc2V0X0N1c3RvbWVyX0lzTnVsbABTZXROdWxsAHNldF9TZWN1cml0
eVByb3RvY29sAGRieFVybABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AVHJpbQByZXNvdXJjZU1h
bgBTY3JpcHRNYWluAFBhdGhKb2luAENvbHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9u
AGdldF9FcnJvckV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABN
aWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRT
UGlwZWxpbmVXcmFwAFNsZWVwAFJlc3RTaGFycABrdnAAU3lzdGVtLkxpbnEAQ2hhcgBBZGRIZWFk
ZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNl
TWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAGdldF9DdXN0b21lcgBzZXRfQ3VzdG9tZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lLldyYXBwZXIAQWRkUGFyYW1ldGVyAEZpcmVFcnJvcgBnZXRfZXJyb3IAc2V0
X2Vycm9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFND
XzY4M2VmNjZjOTVmZDQ0M2Y5YzMwYjBmMDc5MDNhNTE1LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ182ODNlZjY2Yzk1ZmQ0NDNmOWMzMGIwZjA3OTAzYTUx
NS5Qcm9wZXJ0aWVzAFNldExvY2FsVmFyaWFibGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZm
ZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAYXJncwBnZXRfY29sdW1u
cwBzZXRfY29sdW1ucwBDb25uZWN0aW9ucwBCdWZmZXJzAHBhcmFtZXRlcnMARmluaXNoT3V0cHV0
cwBnZXRfc3RhdHVzAHNldF9zdGF0dXMAQ3JlYXRlTmV3T3V0cHV0Um93cwBnZXRfcm93cwBzZXRf
cm93cwBnZXRfdXBkYXRlZF9hdABzZXRfdXBkYXRlZF9hdABnZXRfcmV0cmlldmVkX2F0AHNldF9y
ZXRyaWV2ZWRfYXQAQ29uY2F0AFJlZnJlc2hRdWVyeU9iamVjdABkYnhRdWVyeU9iamVjdABTZWxl
Y3QAU3lzdGVtLk5ldABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABBcGlKb2JSZXN1bHQAR2V0
RnJlc2hRdWVyeVJlc3VsdABnZXRfcXVlcnlfcmVzdWx0AHNldF9xdWVyeV9yZXN1bHQASVJlc3RD
bGllbnQAX2NsaWVudABBZGRVcmxTZWdtZW50AGZhaWxDb21wb25lbnQAVXNlckNvbXBvbmVudABQ
YXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuVHhTY3JpcHQASVJlc3RSZXF1ZXN0AHJlcXVlc3QAVG9MaXN0AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AEdldFZhbHVlV2l0aENvbnRl
eHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93
AGdldF92YXJBUElLZXkAZ2V0X0tleQBnZXRfQXNzZW1ibHkAR2V0RGJ4UXVlcnkAZ2V0X3F1ZXJ5
AHNldF9xdWVyeQBIdHRwVXRpbGl0eQBJc051bGxPckVtcHR5AAAAAAAbQQB1AHQAaABvAHIAaQB6
AGEAdABpAG8AbgAACUsAZQB5ACAAAH1FAHIAcgBvAHIAIAByAGUAdAByAGkAZQB2AGkAbgBnACAA
cgBlAHMAcABvAG4AcwBlAC4AIAAgAEMAaABlAGMAawAgAGkAbgBuAGUAcgAgAGQAZQB0AGEAaQBs
AHMAIABmAG8AcgAgAG0AbwByAGUAIABpAG4AZgBvAC4AAAMmAAADLwAAD1EAdQBlAHIAeQBJAEQA
ABdwAF8AQwBsAGkAZQBuAHQAXwBJAEQAAAtKAG8AYgBJAEQAABFSAGUAcwB1AGwAdABJAEQAAAtF
AFIAUgBPAFIAAAEAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0
ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYA
YQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFP
AHUAdABwAHUAdAAgADAAABN2AGEAcgBBAFAASQBLAGUAeQAAF3YAYQByAEMAbABpAGUAbgB0AEkA
RAAAH3YAYQByAEQAQgBYAFEAdQBlAHIAeQBQAGEAdABoAAATdgBhAHIARABiAHgAVQBSAEwAACF2
AGEAcgBKAG8AYgBTAHQAYQB0AHUAcwBQAGEAdABoAAAVdgBhAHIAUQB1AGUAcgB5AEkARAAAJ3YA
YQByAFIAZQBmAHIAZQBzAGgAUQB1AGUAcgB5AFAAYQB0AGgAAHFTAEMAXwA2ADgAMwBlAGYANgA2
AGMAOQA1AGYAZAA0ADQAMwBmADkAYwAzADAAYgAwAGYAMAA3ADkAMAAzAGEANQAxADUALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAM9AAAAAANyDvabGeREsXIUUF7G
6ZsABCABAQgDIAABBSABARERBCABAQ4GIAEBEYCJBgABARGAmQ4HBBI0FRFBARIkEiQSRQYVEj0B
EiQIIAAVEUEBEwAGFRFBARIkBCAAEwADIAACAyAADggHARUSTQEeAAUAAg4ODgcgAhKApQ4ODDAB
ARUSTQEeABKApQQKAR4ABCAAEkUGIAIBDhJFBhUSTQEeAAsVEmUCFRFpAg4ODgUgAgEcGBkQAgIV
EoCxAR4BFRKAsQEeABUSZQIeAB4BCQoCFRFpAg4ODhAQAQEVEj0BHgAVEoCxAR4AAwoBDgoAAg4O
FRKAsQEOBhUSZQIODgQKAg4OBhUSZQIOAhgQAQIVEoCxAR4AFRKAsQEeABUSZQIeAAIEBwESSQcg
AgEOEYC1ByACEoClDhwKIAMSgKUOHBGAvQQKARI8BAABAQgIBwMSPBI8EkkECgESNAMHAQIFIAAS
gMkKIAYBCA4ODggQAgkgAwEScR0IEnUFIAIBCBwDBwEIBgACCBJ1DgUgAR0ICAUgABKA0QYgARKA
1RwFAAASgNkGIAEcEoDdCAABEoDhEYDlBSAAEoDpByACAQ4SgOkGFRFpAg4OBAABDg4EIAATAQYA
Aw4ODg4FIAEOHQMEAAECDgi3elxWGTTgiQiJhF3NgIDMkQhZgGLnf5FfdQiwP19/EdUKOgIGDgMG
EjkCBggDBhIUAwYSGAMGEgwDBhJ5BAYSgIEEBhKAhQMGEiAHBhUSPQESJAcGFRI9ARIoAwYRYQIG
DQMGEiwDBhIwAwYSOAMGEkAMBhUSZQIVEWkCDg4OBwYVEmUCDg4HBhUSZQIOAgcwAQEeABJJCQAB
DhUSUQIODgUAAQ4dDgUgARI8CAYgARI8EjwEIAASNAQgAQECCyAEAQgdCB0ScRJ1BSABARJ5AyAA
CAUAABKAgQUAABKAhQYAAQESgIUEAAASIAMAAAEIIAAVEj0BEiQJIAEBFRI9ARIkCCAAFRI9ARIo
CSABARUSPQESKAQgABFhBSABARFhAyAADQQgAQENBCAAEiwFIAEBEiwEIAASMAUgAQESMAQgABI4
BSABARI4CSABDhURaQIODgQgAQ4OBCABAg4DKAAOAygAAgMoAAgFCAASgIEFCAASgIUECAASIAgo
ABUSPQESJAgoABUSPQESKAQoABFhAygADQQoABIsBCgAEjAEKAASOAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNjgzZWY2NmM5NWZkNDQzZjlj
MzBiMGYwNzkwM2E1MTUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAASQEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29y
ayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAACFkAAAAAAAAAAAAAIlkAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAABRZAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAA
AAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAAAAAAAAAA
AOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAA
AAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJ
AG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBTAHQA
cgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBD
AG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADYAOAAzAGUAZgA2
ADYAYwA5ADUAZgBkADQANAAzAGYAOQBjADMAMABiADAAZgAwADcAOQAwADMAYQA1ADEANQAAADAA
CAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0
AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOAA4AEIAMwBGADIARAA4AEEANAA0ADcANABGADYA
QQBBAEYAQQBCADUANgA5AEYAQwBGADcARAA4ADAANQA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBh
AGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUA
AAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4ADgAQgAzAEYAMgBEADgAQQA0ADQA
NwA0AEYANgBBAEEARgBBAEIANQA2ADkARgBDAEYANwBEADgAMAA1ADcALgBkAGwAbAAAAGgAJAAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANgA4ADMAZQBmADYANgBjADkANQBmAGQA
NAA0ADMAZgA5AGMAMwAwAGIAMABmADAANwA5ADAAMwBhADUAMQA1AAAANAAIAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAA0OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_88b3f2d8a4474f6aafab569fcf7d8057</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varAPIKey,User::varClientID,User::varDBXQueryPath,User::varDbxURL,User::varJobStatusPath,User::varQueryID,User::varRefreshQueryPath</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">32e0f6d19118cef91854028a99d53457</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">a3444e8569bd9443f973b06de7f8c89512c566e2</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">3F</property>
              </properties>
              <outputs>
                <output
                  refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[Customer]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[Customer]"
                      name="Customer" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[JsEMRSettingID]"
                      dataType="i4"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[JsEMRSettingID]"
                      name="JsEMRSettingID" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDetail]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDetail]"
                      name="EventDetail" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[LogDateTime]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[LogDateTime]"
                      name="LogDateTime" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[ClientID]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[ClientID]"
                      name="ClientID" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[AccessID]"
                      dataType="i4"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[AccessID]"
                      name="AccessID" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDate]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDate]"
                      name="EventDate" />
                    <outputColumn
                      refId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDesc]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0].Columns[EventDesc]"
                      name="EventDesc" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GET HJ Refresh\numRowsInserted"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="numRowsInserted">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::varNumRowsInserted1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\GET HJ Refresh\numRowsInserted.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GET HJ Refresh\numRowsInserted.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\GET HJ Refresh\numRowsInserted.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GET HJ Refresh\Row Count"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::rowcount</property>
              </properties>
              <inputs>
                <input
                  refId="Package\GET HJ Refresh\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GET HJ Refresh\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\GET HJ Refresh\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\GET HJ Refresh.Paths[Derived Column Output]"
              endId="Package\GET HJ Refresh\numRowsInserted.Inputs[Row Count Input 1]"
              name="Derived Column Output"
              startId="Package\GET HJ Refresh\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\GET HJ Refresh.Paths[Output 0]"
              endId="Package\GET HJ Refresh\Row Count.Inputs[Row Count Input 1]"
              name="Output 0"
              startId="Package\GET HJ Refresh\GET HJ Refresh API Call.Outputs[Output 0]" />
            <path
              refId="Package\GET HJ Refresh.Paths[Row Count Output 1]"
              endId="Package\GET HJ Refresh\Get HJ Refresh API.Inputs[OLE DB Destination Input]"
              name="Row Count Output 1"
              startId="Package\GET HJ Refresh\numRowsInserted.Outputs[Row Count Output 1]" />
            <path
              refId="Package\GET HJ Refresh.Paths[Row Count Output 11]"
              endId="Package\GET HJ Refresh\Derived Column.Inputs[Derived Column Input]"
              name="Row Count Output 1"
              startId="Package\GET HJ Refresh\Row Count.Outputs[Row Count Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get PkgExecID (for every package)"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{E4B17DCC-B006-41EE-9E11-FA5F74D0F641}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get PkgExecID (for every package)"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
          SQLTask:SqlStatementSource="INSERT INTO Audit.AuditPkgExecution ( ETLControlID, ParentPkgExecID, CustID, PkgName, PkgGUID, PkgVersionGUID, PkgVersionMajor, PkgVersionMinor, ExecStartDT )&#xA;Values (?, ?, ?, ?, ?, ?, ?, ?, ?)&#xA;&#xA;SELECT MAX(PkgExecID) AS PkgExecID&#xA;FROM Audit.AuditPkgExecution&#xA;WHERE PkgName = ? AND ExecStartDT = ? AND CustID = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::cvarPkgExecID" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::cvarETLControlID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::varCustID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="4"
            SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="5"
            SQLTask:DtsVariableName="System::VersionGUID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="6"
            SQLTask:DtsVariableName="System::VersionMajor"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="7"
            SQLTask:DtsVariableName="System::VersionMinor"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="8"
            SQLTask:DtsVariableName="System::StartTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="9"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="10"
            SQLTask:DtsVariableName="System::StartTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="11"
            SQLTask:DtsVariableName="User::varCustID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::varParentPkgExecID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\LoadSummary Insert - Table 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{DB2EF768-94A9-4B4F-8C31-0EF40A958BF1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="LoadSummary Insert - Table 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
          SQLTask:SqlStatementSource="&#xA;insert into Audit.LoadSummary &#xA;&#x9;(&#x9; &#xA;&#x9;&#x9; ETLControlID&#xA;&#x9;&#x9;,TableName&#xA;&#x9;&#x9;,PackageName&#xA;&#x9;&#x9;,DataSource&#xA;&#x9;&#x9;,LoadStartDate&#xA;&#x9;)&#xA;VALUES&#xA;&#x9;(?, ?,?,?,getdate());&#xA;&#xA;select max(LoadSummaryID) as [LoadSummaryID] from Audit.LoadSummary where ETLControlID = ?&#xA;and TableName = ?&#xA;and PackageName = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="LoadSummaryID"
            SQLTask:DtsVariableName="User::varLoadSummaryID1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::cvarETLControlID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::varAPIcall"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="4"
            SQLTask:DtsVariableName="User::cvarETLControlID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="5"
            SQLTask:DtsVariableName="User::varTableName1"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="6"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::varTableName1"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\LoadSummary Update"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{15D66299-86E5-4C72-84D6-29B59538DAB9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="LoadSummary Update"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
          SQLTask:SqlStatementSource="UPDATE Audit.LoadSummary&#xA;SET&#xA;&#x9;NumRowsInserted = ?,&#xA;&#x9;NumRowsIgnored = ?,&#xA;&#x9;NumRowsErrored = ?,&#xA;&#x9;LoadEndDate = getdate()&#xA;Where LoadSummaryID = ?;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::varNumRowsInserted1"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::varNumRowsIgnored1"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::varNumRowsErrored1"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::varLoadSummaryID1"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set varNumRowsInserted"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{BEE6499F-DB8E-4E2C-977F-202E758E24B3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set varNumRowsInserted"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_9827fecf416a4498aafd7e582516ea43"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="User::varNumRowsErrored1"
          ReadWriteVariables="User::varNumRowsInserted1">
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_421159da2f304c749f8dddefcef98ce1")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft Corporation")> 
<Assembly: AssemblyProduct("ST_421159da2f304c749f8dddefcef98ce1")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft Corporation 2015")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("a7a04066-8cb9-439d-baa5-da20b4a2d79f")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '

        Dts.Variables("varNumRowsInserted1").Value = (Convert.ToInt32(Dts.Variables("varNumRowsInserted1").Value) - Convert.ToInt32(Dts.Variables("varNumRowsErrored1").Value))
        

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="ST_9827fecf416a4498aafd7e582516ea43.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c6cde13e-fb52-4e95-9697-9edf01ae5962}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_421159da2f304c749f8dddefcef98ce1</RootNamespace>
    <AssemblyName>ST_9827fecf416a4498aafd7e582516ea43</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9827fecf416a4498aafd7e582516ea43</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9827fecf416a4498aafd7e582516ea43</msb:DisplayName>
    <msb:ProjectId>{1CAC57F1-B342-45A0-A348-8485B452784D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9827fecf416a4498aafd7e582516ea43.vbproj" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_9827fecf416a4498aafd7e582516ea43.dll">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
MQA2Bv4AMQANBgYBMQAhBg4BMQBPBhYBEQDABh4BEQCcASIBEQBEBCYBEQCoCCoBIQDbCLwABgbM
AC0BVoCKCDABVoB8ATABUCAAAAAABhjSBgYAAQBYIAAAAAAGGNIGBgABAGAgAAAAABEY2AY0AQEA
iiAAAAAAEwioBjgBAQCWIAAAAAATCKcFPQEBAKIgAAAAABMImQZCAQEAriAAAAAAEwgYB0cBAQC6
IAAAAAADGNIGBgABAMIgAAAAABYIbQZMAQEA7iAAAAAAFgiEAVEBAQD1IAAAAAAWCJABVgEBAP0g
AAAAABEY2AY0AQIADiEAAAAABhjSBgYAAgAYIQAAAAAWCEwEXAECAHQhAAAAAAYY0gYGAAIAfCEA
AAAABgCiBQYAAgD9IQAAAADGAnQIkAACAAsiAAAAAMYCGwGVAAMAEyIAAAAAgwB0AWEBAwAfIgAA
AADGApoEmQADACgiAAAAABEAuQBmAQMASCIAAAAAAQClAG4BBAC6IAAAAAAGGNIGBgAFAFQiAAAA
AAMIAgFKAAUAiCIAAAAABhjSBgYABQAAAAEAaQQAAAEACwYAAAEAEgEAAAEAEgEJANIGAQARANIG
BgAZANIGCgApANIGEAAxANIGEAA5ANIGEABBANIGEABJANIGEABRANIGEABZANIGFQBhANIGFQBp
ANIGEABxANIGEAB5ANIGEACBANIGGgCRANIGIACpANIGBgCxANIGBgC5ANIGBgDRANIGJgDpANIG
EAAJAdIGBgARAdIGBgCZANIGBgChANIGBgAMANIGBgAUANIGBgAcANIGBgAkANIGBgAMAAIBSgAU
AAIBSgAcAAIBSgAkAAIBSgDBANIGBgDZAEIBTwDZAAwJVwDxANIGXQBBAWAEZQABAdIGBgBJAaIG
agBJAb8IagAZAdIGBgAZAZIIbwBRAVsIdQBZAWoFewBhAUwEggBpAU8AhgBhAVYEiwBRAcQIAQDB
AHQIkADBABsBlQDBAJoEmQB5AfMApQA0ANsIvAA8AEwESgA8AFYE0wA8ANIGBgAIACwA9AAIADAA
+QApAKsAUAMuAAsAngEuABMApwEuABsAxgEuACMAzwEuACsA+AEuADMA/gEuADsAzwEuAEMAGQIu
AEsA+AEuAFMARQIuAFsA+AEuAGMASwIuAGsAdQIuAHMAggJAAIsA+QBAAIMAzAJDAHsA1QJDAIMA
zAJJAKsAYQNjAHsA1QJjAIMAzAJpAKsAdQOAAIsA+QCDAJMA+QCDAJsA+QCDAHsA1QKJAKsAggOg
AIsA+QCpAIMAxgHAAIsA+QDJAIMAxgHgAIsA+QDjALsA+QDjAFMA+AHpALMA+QADAYMAzAIDAaMA
7gIjAYMAzAIjAVsA+AEgAoMAzAIgAosA+QBAAoMAzAJAAosA+QBgAoMAzAJgAosA+QCAAoMAzAKA
AosA+QCgAosA+QDAAosA+QDgAosA+QDgAoMAzAIAA4sA+QAgA4sA+QAgA4MAzAKdALAABAABAAUA
BQAGAAcACQAIAAAAtwZ2AQAAuQV7AQAAnQaAAQAAKgeFAQAAcQaKAQAAoAGPAQAAaQSUAQAABgGZ
AQIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIAGAARAC4A
NQA8AEMAogC1AMQAywAEgAAAAQAAAAAAAAAAAAAAAABXAAAABAAAAAAAAAAAAAAA2QDUAAAAAAAE
AAAAAAAAAAAAAADZAHMFAAAAAAoAAAAAAAAAAAAAAOIA3QAAAAAADgAAAAAAAAAAAAAA6wCoBAAA
AAAOAAAAAAAAAAAAAADrAIQAAAAAAAAAAAABAAAAFAgAAAgABAAJAAQACgAHAAAAEAASAKMAAAAQ
ACsAowAAAAAALQCjAGsAqwBrAM4AAAAAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFBy
b3ZpZGVyYDEAU1RfNDIxMTU5ZGEyZjMwNGM3NDlmOGRkZGVmY2VmOThjZTEAVG9JbnQzMgBTVF85
ODI3ZmVjZjQxNmE0NDk4YWFmZDdlNTgyNTE2ZWE0MwA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMAVABEaXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2
YWx1ZV9fAG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBDcmVhdGVJbnN0YW5jZQBnZXRf
R2V0SW5zdGFuY2UAaW5zdGFuY2UAR2V0SGFzaENvZGUAVmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBHZXRU
eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAX3Jlc0N1bHR1cmUAVlNUQVJUU2Ny
aXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3b3JkQXR0cmlidXRl
AEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1v
ZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25B
dHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBtX1ZhbHVlAGdldF9WYWx1ZQBzZXRfVmFs
dWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRvU3RyaW5nAE1hdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15
U2VydmljZXMuSW50ZXJuYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNUXzk4MjdmZWNmNDE2YTQ0OThhYWZkN2U1ODI1MTZlYTQzLmRsbABnZXRfSXRlbQBTeXN0ZW0A
RW51bQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0
aW9uAE15QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AbV9BcHBPYmplY3RQcm92aWRlcgBtX1Vz
ZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2Vz
T2JqZWN0UHJvdmlkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTeXN0ZW0uQ29kZURvbS5Db21waWxl
cgBnZXRfVXNlcgBFbnRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEFjdGl2YXRv
cgAuY3RvcgAuY2N0b3IATW9uaXRvcgBTeXN0ZW0uRGlhZ25vc3RpY3MATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljLkRldmljZXMAZ2V0X1dlYlNlcnZpY2VzAE15V2ViU2VydmljZXMATWljcm9zb2Z0LlZp
c3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZp
Y2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF80MjExNTlkYTJmMzA0Yzc0OWY4
ZGRkZWZjZWY5OGNlMS5NeS5SZXNvdXJjZXMATXlSZXNvdXJjZXMAU1RfNDIxMTU5ZGEyZjMwNGM3
NDlmOGRkZGVmY2VmOThjZTEuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRf
VmFyaWFibGVzAE15U2V0dGluZ3MARXF1YWxzAFJ1bnRpbWVIZWxwZXJzAFN1Y2Nlc3MAZ2V0X0R0
cwBTY3JpcHRSZXN1bHRzAG1fU3luY09iamVjdABNeVByb2plY3QARXhpdABzZXRfVGFza1Jlc3Vs
dABDb252ZXJ0AG1fQ29udGV4dABTVF80MjExNTlkYTJmMzA0Yzc0OWY4ZGRkZWZjZWY5OGNlMS5N
eQBnZXRfQXNzZW1ibHkAAAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBv
AHUAcgBjAGUAcwAAJ3YAYQByAE4AdQBtAFIAbwB3AHMASQBuAHMAZQByAHQAZQBkADEAACV2AGEA
cgBOAHUAbQBSAG8AdwBzAEUAcgByAG8AcgBlAGQAMQAAAAAAYalAOyKQ70iAexuxxhXUPAAEIAEB
CAMgAAEFIAEBEREEIAEBDgQgAQECBSACAQ4OBSABARFFByAEAQ4ODg4GFRIkARIMBhUSJAESCAYV
EiQBEmUGFRIkARIgBCAAEwAHAAESbRGAmQUgABKAnQcgAgEOEoCdBAABHBwEAAEBHAUgABKAqQUg
ABKArQYgARKAsRwDIAAcBAABCBwEIAEBHAQgAQIcAyAACAMgAA4EBwEeAAIeAAUQAQAeAAQKAR4A
BAcBEwAGFRIkARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHV
CjoIiYRdzYCAzJEEAAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5
AwYSfQMGEhgCBhwCBggDBhEoAwAAAQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQES
fQQAABIYBCAAEm0HEAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9
BAgAEhgEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfNDIxMTU5ZGEyZjMwNGM3NDlmOGRkZGVmY2VmOThjZTEAAAUBAAAAABoBABVNaWNy
b3NvZnQgQ29ycG9yYXRpb24AACsBACZDb3B5cmlnaHQgQCBNaWNyb3NvZnQgQ29ycG9yYXRpb24g
MjAxNQAABQEAAQAAKQEAJGE3YTA0MDY2LThjYjktNDM5ZC1iYWE1LWRhMjBiNGEyZDc5ZgAADAEA
BzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41CAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4w
LjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3Rv
Y29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1
dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMA
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAPA4AAAAAAAAAAAAAAo5AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8
OAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAABABAAAAAAAAAAAAABABDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEoAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAfAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAAEwAFgABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQAIABDAG8AcgBwAG8AcgBhAHQAaQBvAG4AAABw
ACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANAAyADEAMQA1ADkA
ZABhADIAZgAzADAANABjADcANAA5AGYAOABkAGQAZABlAGYAYwBlAGYAOQA4AGMAZQAxAAAAMAAI
AAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQA
ZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA5ADgAMgA3AGYAZQBjAGYANAAxADYAYQA0ADQAOQA4
AGEAYQBmAGQANwBlADUAOAAyADUAMQA2AGUAYQA0ADMALgBkAGwAbAAAAHIAJwABAEwAZQBnAGEA
bABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBz
AG8AZgB0ACAAQwBvAHIAcABvAHIAYQB0AGkAbwBuACAAMgAwADEANQAAAAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AOQA4ADIANwBmAGUAYwBmADQAMQA2AGEANAA0ADkAOABhAGEA
ZgBkADcAZQA1ADgAMgA1ADEANgBlAGEANAAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADQAMgAxADEANQA5AGQAYQAyAGYAMwAwADQAYwA3ADQAOQBmADgA
ZABkAGQAZQBmAGMAZQBmADkAOABjAGUAMQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAHDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set vIsPackageExecuted"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{0939EDFC-215C-4864-8FFF-945296D95B2D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set vIsPackageExecuted"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
          SQLTask:SqlStatementSource="select cast((case when COUNT(*) &gt; 0 then 1 else 0 end) as bit) IsPackageExecuted&#xA;from [Audit].[AuditPkgExecution]&#xA;where PkgName = ?&#xA;and ETLControlID = ?&#xA;and CustID = ?&#xA;and SuccessfulProcessingInd = 'Y'"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="IsPackageExecuted"
            SQLTask:DtsVariableName="User::vIsPackageExecuted" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::cvarETLControlID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::varCustID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{77D24979-D3A9-4653-97E7-5B537B71AE13}"
      DTS:From="Package\LoadSummary Insert - Table 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Delete data from AthenaStg HJ API Refresh table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{1C0D0AFB-393B-47A6-990E-8C34FDC6FB96}"
      DTS:From="Package\Get PkgExecID (for every package)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\LoadSummary Insert - Table 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{B726B4CA-B33E-4898-957E-ED763ACCA46E}"
      DTS:From="Package\Count Load Errors"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\LoadSummary Update" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{1FA97C5F-6AFA-46D6-9561-AF22983A413B}"
      DTS:From="Package\GET HJ Refresh"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Set varNumRowsInserted" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C21AE41E-14E4-446D-8EFA-76ED676AA302}"
      DTS:From="Package\Get ETLControlID, PkgExecID, AccessToken from Parent package"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Set vIsPackageExecuted" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{617FEAB8-951F-4A22-92EC-13749A763281}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::vIsPackageExecuted] != TRUE"
      DTS:From="Package\Set vIsPackageExecuted"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Get PkgExecID (for every package)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{12B63CDE-2D79-4908-AA8F-FB6EAAFB2CB5}"
      DTS:From="Package\Assign custom parameters to variables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Get ETLControlID, PkgExecID, AccessToken from Parent package" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{CC8C44C0-B2B3-4D61-B36B-24E7AFAD89E4}"
      DTS:From="Package\Set varNumRowsInserted"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Count Load Errors" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{D6AA164C-0265-43E8-A7E0-724368C25AB9}"
      DTS:From="Package\Delete data from AthenaStg HJ API Refresh table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\GET HJ Refresh" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{E407C29C-38F8-4081-B31F-F3D3A3FDFD78}"
      DTS:From="Package\LoadSummary Update"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\AuditPkgExecution Update" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{C182A249-688B-4EA1-8C34-75BC1156F7ED}"
      DTS:EventID="360603872"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{A1CF0451-B15A-4CCC-9F7D-E3634DB63190}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\JobAudit 'E'"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{45D31946-8C53-4D40-93F2-C37B4AEA65AE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="JobAudit 'E'"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
              SQLTask:SqlStatementSource="IF EXISTS (&#xA;select * from Audit.JobAudit where JobStatusInd = 'R' and ETLControlID = ?)&#xA; UPDATE Audit.JobAudit SET JobStatusInd = 'E' where ETLControlID = ? and JobStatusInd = 'R'&#xA;ELSE&#xA; INSERT INTO Audit.JobAudit (ETLControlID, CustID, PracticeID,JobStatusInd) VALUES (?, ?, ?, 'E' )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cvarETLControlID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::cvarETLControlID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::cvarETLControlID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varCustID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varPracticeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log Job Error"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A2AB6D60-AF28-4C28-A83A-4FCC9FFC173C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Job Error"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{EF4B26C2-31F7-4CC1-B5CF-83800EE49AF6}"
              SQLTask:SqlStatementSource="sp_JobError_Insert  ?,?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::cvarETLControlID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{35ACA6FC-001F-4358-9540-C2423FE50E1E}"
          DTS:From="Package.EventHandlers[OnError]\Log Job Error"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\JobAudit 'E'" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="262,42"
          Id="Package\Assign custom parameters to variables"
          TopLeft="333,3" />
        <NodeLayout
          Size="202,42"
          Id="Package\AuditPkgExecution Update"
          TopLeft="354,709" />
        <NodeLayout
          Size="164,42"
          Id="Package\Count Load Errors"
          TopLeft="374,559" />
        <NodeLayout
          Size="310,42"
          Id="Package\Delete data from AthenaStg HJ API Refresh table"
          TopLeft="679.375,337.5" />
        <NodeLayout
          Size="386,42"
          Id="Package\Get ETLControlID, PkgExecID, AccessToken from Parent package"
          TopLeft="267,88" />
        <NodeLayout
          Size="152,42"
          Id="Package\GET HJ Refresh"
          TopLeft="388,424.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Get PkgExecID (for every package)"
          TopLeft="333,250" />
        <NodeLayout
          Size="222,42"
          Id="Package\LoadSummary Insert - Table 1"
          TopLeft="349,342" />
        <NodeLayout
          Size="182,42"
          Id="Package\LoadSummary Update"
          TopLeft="361,630" />
        <NodeLayout
          Size="198,42"
          Id="Package\Set varNumRowsInserted"
          TopLeft="355,490" />
        <NodeLayout
          Size="194,42"
          Id="Package\Set vIsPackageExecuted"
          TopLeft="366,166" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="571,360.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108.375,0"
              Start="0,0"
              End="100.875,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="100.875,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="457.625,292">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="454.25,601">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="464.25,466.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.25,23.5"
              Start="0,0"
              End="-10.25,16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.75"
                    Point2="0,11.75"
                    Point3="-4,11.75" />
                  <mssgle:LineSegment
                    End="-6.25,11.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.25,11.75"
                    Point2="-10.25,11.75"
                    Point3="-10.25,15.75" />
                  <mssgle:LineSegment
                    End="-10.25,16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="461.25,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="458.75,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,9.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="461.75,45">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="455.25,532">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="784.375,379.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-320.125,45"
              Start="0,0"
              End="-320.125,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="-4,22.5" />
                  <mssgle:LineSegment
                    End="-316.125,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-316.125,22.5"
                    Point2="-320.125,22.5"
                    Point3="-320.125,26.5" />
                  <mssgle:LineSegment
                    End="-320.125,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="454,672">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="133.333333333334,42"
          Id="Package.EventHandlers[OnError]\JobAudit 'E'"
          TopLeft="36.333333209157,101.242422432069" />
        <NodeLayout
          Size="142,42"
          Id="Package.EventHandlers[OnError]\Log Job Error"
          TopLeft="30.6515151120045,21.6666662792365" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="102.325757493914,63.6666662792365">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.5757561528322"
              Start="0,0"
              End="0,30.0757561528322">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.0757561528322" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\GET HJ Refresh">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="192,42"
          Id="Package\GET HJ Refresh\GET HJ Refresh API Call"
          TopLeft="435,164" />
        <NodeLayout
          Size="169,42"
          Id="Package\GET HJ Refresh\Get HJ Refresh API"
          TopLeft="451.166664816439,479.933333441814" />
        <NodeLayout
          Size="132,42"
          Id="Package\GET HJ Refresh\Row Count"
          TopLeft="460.166664816439,251.933333441814" />
        <NodeLayout
          Size="164,42"
          Id="Package\GET HJ Refresh\numRowsInserted"
          TopLeft="447.166664816439,398.933333441814" />
        <NodeLayout
          Size="154,42"
          Id="Package\GET HJ Refresh\Derived Column"
          TopLeft="449.166664816439,321.933333441814" />
        <EdgeLayout
          Id="Package\GET HJ Refresh.Paths[Output 0]"
          TopLeft="528.58333240822,206">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.9333334418138"
              Start="0,0"
              End="0,38.4333334418138">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.4333334418138" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GET HJ Refresh.Paths[Derived Column Output]"
          TopLeft="527.666664816439,363.933333441814">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GET HJ Refresh.Paths[Row Count Output 11]"
          TopLeft="526.166664816439,293.933333441814">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GET HJ Refresh.Paths[Row Count Output 1]"
          TopLeft="532.416664816439,440.933333441814">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\GET HJ Refresh\Get HJ Refresh API">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>